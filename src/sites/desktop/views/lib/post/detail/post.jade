include ../content
include ./subPost

mixin post(post, isRepost)
	if post.type == 'repost'
		+core(post.post, true, post)
	else
		+core(post, false)

mixin core(post, isRepost, repost)
	- var login = (me != null);
	- var isHaveReplies = (post.repliesCount > 0);
	- var isTalk = (post.inReplyToPost !== null && post.inReplyToPost.inReplyToPost !== null);
	article.post(
			class                   = isRepost ? 'repost ' + post.type : post.type
			role                    = 'article'
			lang                    = post.user.lang
			title                   = post.createdAt
			itemscope
			itemtype                = 'http://schema.org/BlogPosting'
			data-id                 = post.id
			data-cursor             = isRepost ? repost.cursor : post.cursor
			data-user-id            = post.user.id
			data-is-liked          != login ? post.isLiked.toString() : null
			data-is-reposted       != login ? post.isReposted.toString() : null
			data-is-have-replies   != isHaveReplies.toString()
			data-is-talk           != isTalk.toString()
			data-is-display-active='false')
		if isTalk
			i.fa.fa-ellipsis-v.talk-ellipsis
		if isHaveReplies
			i.fa.fa-ellipsis-v.replies-ellipsis
		if login && me.id != post.userId
			div.repost-form
				div.background
				form.form
					h2
						i.fa.fa-retweet
						| この投稿をRepostしますか？
					article(role='article')
						a.icon-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='icon')
							img.icon(src=post.user.iconUrl, alt='icon')
						header.header
							h3
								a.user-name(href=config.url + '/' + post.user.screenName, target='_blank', rel='author')= post.user.name
							if post.user.isVerified
								img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
							span.screen-name= '@' + post.user.screenName
							a(href=config.url + '/' + post.user.screenName + '/' + post.id, itemprop='url'): time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
						div.main(itemprop='articleBody')
							+content(post)
					div.actions
						button.accept(type='submit')
							i.fa.fa-check
							p Repost
						button.cancel(type='button')
							i.fa.fa-ban
							p キャンセル
		if post.inReplyToPost
			if post.inReplyToPost.inReplyToPost
				button.read-talk(role='button', title='会話をもっと読む')
					i.fa.fa-ellipsis-v
		div.talk
		if post.inReplyToPost
			+subPost(post.inReplyToPost)(class='reply-source')
		if isRepost
			div.repost-information
				p.info
					a.icon-anchor(href=config.url + '/' + repost.user.screenName, title= repost.user.comment != null ? repost.user.comment : '@' + repost.user.screenName)
						img.icon(src=repost.user.iconUrl, alt='icon')
					span.text
						i.fa.fa-retweet
						| Reposted by 
						a.name(href=config.url + '/' + repost.user.screenName, target='_blank')= repost.user.name
		div.main
			header.header
				div.icon-area
					a.icon-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='icon')
						img.icon(src=post.user.iconUrl, alt='icon')
				div.main
					div.top
						div.left
							div.author
								h1.name
									a.user-name(href=config.url + '/' + post.user.screenName, rel='author')= post.user.name
								if post.user.isVerified
									img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
								p.screen-name= '@' + post.user.screenName
						div.right
							if post.app != null
								p.via
									a.via-anchor
										span.caption via
										b.app-name= post.app.name
							p.created-at
								a.time-anchor(href=config.url + '/' + post.user.screenName + '/' + post.id, itemprop='url')
									time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
					div.bottom
						p.comment= post.user.comment
			div.content(itemprop='articleBody')
				+content(post)
		footer.footer
			if login
				ul.actions
					li.reply
						button.reply-button(title='返信', role='button')
							i.fa.fa-reply
						a.count(href=config.url + '/' + post.user.screenName + '/' + post.id)
							= post.repliesCount != 0 ? post.repliesCount : ''
					if me.id != post.userId
						li.repost
							button.repost-button(title= post.isReposted ? 'シェアを取り消し' : 'シェア', role='button')
								i.fa.fa-retweet
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/reposts')
								= post.repostsCount != 0 ? post.repostsCount : ''
					li.like
						button.like-button(title= post.isLiked ? 'Unlike' : 'Like', role='button')
							i.fa.fa-star
						a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/likes')
							= post.likesCount != 0 ? post.likesCount : ''
			div.likes-and-reposts
				if status.stargazers != null && status.stargazers.length > 0
					section.stargazers
						header.caption
							a.count= status.favoritesCount
							h2.title
								| お気に入り
						ol.stargazers
							each stargazer in status.stargazers
								li.stargazer
									a.icon-anchor(href='/' + stargazer.screenName, title= '@' + stargazer.screenName, data-tooltip= stargazer.name)
										img.icon(src=stargazer.iconImageUrl, alt='icon')
				if status.reposters != null && status.reposters.length > 0
					section.reposters
						header.caption
							a.count= status.repostsCount
							h2.title
								| Repost
						ol.reposters
							each reposter in status.reposters
								li.reposter
									a.icon-anchor(href='/' + reposter.screenName, title= '@' + reposter.screenName, data-tooltip= reposter.name)
										img.icon(src=reposter.iconImageUrl, alt='icon')
		form.reply-form(role='form')
			img.me-icon(src=me.iconUrl, alt='icon')
			div.form
				textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + post.user.screenName + ' '
				div.design-allow(role='presentation')
				ol.photos
				ol.uploads
				button.attach-from-local(type='button', role='button', title='PCから画像を添付する')
					i.fa.fa-upload
				button.attach-from-album(type='button', role='button', title='アルバムから画像を添付する')
					i.fa.fa-folder-open
				button.submit-button.ui-button(type='submit', role='button')
					| Reply
					i.fa.fa-reply
				input(name='file', type='file', accept='image/*', multiple)
		div.replies(itemprop='comment')
