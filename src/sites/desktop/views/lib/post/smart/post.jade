include ./content
include ./subPost
include ./repliesSubPost

mixin status(status)
	div.icon-area
		a.icon-anchor(href=config.url + '/' + status.user.screenName, title= status.user.comment != null ? status.user.comment : '@' + status.user.screenName, rel='icon')
			img.icon(src=status.user.iconUrl, alt='icon')
	header.header
		div.author(itemprop='author')
			h2
				a.user-name(href=config.url + '/' + status.user.screenName, target='_blank', rel='author')= status.user.name
			if status.user.isVerified
				img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
			span.screen-name= status.user.screenName
		div.right
			if status.app != null
				a.via-anchor
					p.via
						span.caption via
						b.app-name= status.app.name
			a.time-anchor(href=config.url + '/' + status.user.screenName + '/status/' + status.id, itemprop='url')
				time(datetime=status.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= status.createdAt
	div.content(itemprop='articleBody')
		+content(status)

mixin photo(reply)
	div.icon-area
		a.icon-anchor(href=config.url + '/' + reply.user.screenName, title= reply.user.comment != null ? reply.user.comment : '@' + reply.user.screenName, rel='icon')
			img.icon(src=reply.user.iconUrl, alt='icon')
	header.header
		div.author(itemprop='author')
			h2
				a.user-name(href=config.url + '/' + reply.user.screenName, target='_blank', rel='author')= reply.user.name
			if reply.user.isVerified
				img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
			span.screen-name= reply.user.screenName
		div.right
			if reply.app != null
				a.via-anchor
					p.via
						span.caption via
						b.app-name= reply.app.name
			a.time-anchor(href=config.url + '/' + reply.user.screenName + '/post/' + reply.id, itemprop='url')
				time(datetime=reply.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= reply.createdAt
	div.content(itemprop='articleBody')
		+content(reply)

mixin post(post, isRepost)
	if post.type == 'repost'
		+core(post.post, true, post)
	else
		+core(post, false)

mixin core(post, isRepost, repost)
	- var login = (me != null);
	article.post(
			class                   = isRepost ? 'repost ' + post.type : post.type
			role                    = 'article'
			lang                    = post.user.lang
			title                   = post.createdAt
			itemscope
			itemtype                = 'http://schema.org/BlogPosting'
			data-id                 = post.id
			data-cursor             = isRepost ? repost.cursor : post.cursor
			data-user-id            = post.user.id
			data-is-favorited      != login ? post.isFavorited.toString() : null
			data-is-reposted       != login ? post.isReposted.toString() : null
			data-is-have-replies   != (post.repliesCount > 0).toString()
			data-is-talk           != (post.inReplyToPost !== null && post.inReplyToPost.inReplyToPost !== null).toString()
			data-is-display-active='false')
		if login && me.id != post.userId
			div.repost-form
				div.background
				form.form
					h2
						i.fa.fa-retweet
						| この投稿をRepostしますか？
					article(role='article')
						a.icon-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='icon')
							img.icon(src=post.user.iconUrl, alt='icon')
						header.header
							h3
								a.user-name(href=config.url + '/' + post.user.screenName, target='_blank', rel='author')= post.user.name
							if post.user.isVerified
								img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
							span.screen-name= '@' + post.user.screenName
							a(href=config.url + '/' + post.user.screenName + '/status/' + post.id, itemprop='url'): time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
						div.main(itemprop='articleBody')
							+content(post)
					div.actions
						button.accept(type='submit')
							i.fa.fa-check
							p Repost
						button.cancel(type='button')
							i.fa.fa-ban
							p キャンセル
		if post.inReplyToPost
			+subPost(post.inReplyToPost)(class='reply-source')
		if isRepost
			div.repost-information
				p.info
					a.icon-anchor(href=config.url + '/' + repost.user.screenName, title= repost.user.comment != null ? repost.user.comment : '@' + repost.user.screenName)
						img.icon(src=repost.user.iconUrl, alt='icon')
					span.text
						i.fa.fa-retweet
						| Reposted by 
						a.name(href=config.url + '/' + repost.user.screenName, target='_blank')= repost.user.name
		div.main
			case post.type
				when 'status'
					+status(post)
				when 'photo'
					+photo(post)
		footer.footer
			if login
				ul.actions
					li.reply
						button.reply-button(title='返信', role='button')
							i.fa.fa-reply
						a(href=config.url + '/' + post.user.screenName + '/status/' + post.id).count= post.repliesCount != 0 ? post.repliesCount : ''
					if me.id != post.userId
						li.repost
							button.repost-button(title= post.isReposted ? 'シェアを取り消し' : 'シェア', role='button')
								i.fa.fa-retweet
							a(href=config.url + '/' + post.user.screenName + '/status/' + post.id + '/reposts').count= post.repostsCount != 0 ? post.repostsCount : ''
					li.favorite
						button.favorite-button(title= post.isFavorited ? 'お気に入り解除' : 'お気に入り', role='button')
							i.fa.fa-star
						a(href=config.url + '/' + post.user.screenName + '/status/' + post.id + '/favorites').count= post.favoritesCount != 0 ? post.favoritesCount : ''
			if post.stargazers != null
				ol.stargazers
					each stargazer in post.stargazers
						li.stargazer
							a.icon-anchor(href='/' + stargazer.screenName, title= '@' + stargazer.screenName)
								img.icon(src=stargazer.iconUrl, alt='icon')
		if post.repliesCount > 0
			i.fa.fa-ellipsis-v.reply-info
		aside.form-and-replies
			form.reply-form(role='form')
				img.me-icon(src=me.iconUrl, alt='icon')
				div.form
					textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + post.user.screenName + ' '
					div.design-allow(role='presentation')
					ol.photos
					ol.uploads
					button.attach-from-local(type='button', role='button', title='PCから画像を添付する')
						i.fa.fa-upload
					button.attach-from-album(type='button', role='button', title='アルバムから画像を添付する')
						i.fa.fa-folder-open
					button.submit-button.ui-button(type='submit', role='button')
						| Reply
						i.fa.fa-reply
					input(name='file', type='file', accept='image/*', multiple)
			ol.replies(itemprop='comment')
