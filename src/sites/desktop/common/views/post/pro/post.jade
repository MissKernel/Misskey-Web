include ../content
include ../repost-form
include ./sub-post

mixin post(post, isRepost)
	if post.type == 'repost'
		+core(post.post, true, post)
	else
		+core(post, false)

mixin core(post, isRepost, repost)
	- var login = (me != null);
	- var isHaveReplies = (post.repliesCount > 0);
	- var isTalk = (post.inReplyToPost !== null && post.inReplyToPost.inReplyToPost !== null);
	article.post(
			class                   = isRepost ? 'repost ' + post.type : post.type
			lang                    = post.user.lang
			title                   = post.createdAt
			itemscope
			itemtype                = 'http://schema.org/BlogPosting'
			data-id                 = post.id
			data-cursor             = isRepost ? repost.cursor : post.cursor
			data-user-id            = post.user.id
			data-type               = post.type
			data-is-liked          != login ? post.isLiked.toString() : null
			data-is-reposted       != login ? post.isReposted.toString() : null
			data-is-have-replies   != isHaveReplies.toString()
			data-is-talk           != isTalk.toString())
		if login && me.id != post.userId
			+repost-form(post)

		div.main
			if isTalk
				button.read-talk(role='button', title='会話をもっと読む')
					i.fa.fa-ellipsis-v
			if post.inReplyToPost
				div.talk
					+subPost(post.inReplyToPost)(class='reply-source')
			if isRepost
				p.repost-info
					a.avatar-anchor(href=config.url + '/' + repost.user.screenName, title= repost.user.comment != null ? repost.user.comment : '@' + repost.user.screenName)
						img.avatar(src=repost.user.avatarUrl + '?mini', alt='avatar')
					i.fa.fa-retweet
					| Reposted by 
					a.name(href=config.url + '/' + repost.user.screenName, target='_blank')= repost.user.name
			div.body
				header.header
					div.avatar-area
						a.avatar-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='avatar')
							img.avatar(src=post.user.avatarUrl, alt='avatar')
					div.main
						div.top
							div.left
								div.author
									a.name(href=config.url + '/' + post.user.screenName, rel='author')= post.user.name
									if post.user.isVerified
										img.verified-icon(src= config.resourcesUrl + '/common/verified.png', alt='verified', title='認証済み')
									p.screen-name= '@' + post.user.screenName
							div.right
								if post.app != null
									p.via
										a.via-anchor
											span.caption via
											b.app-name= post.app.name
								p.created-at
									a.time-anchor(href=config.url + '/' + post.user.screenName + '/' + post.id, itemprop='url')
										time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
						div.bottom
							p.comment= post.user.comment
				div.content(itemprop='articleBody')
					+content(post)
				footer.footer
					ul.actions
						li.reply
							button.reply-button(title='返信')
								i.fa.fa-reply
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id)
								= post.repliesCount != 0 ? post.repliesCount : ''
						li.repost
							button.repost-button(title= post.isReposted ? 'シェアを取り消し' : 'シェア')
								i.fa.fa-retweet
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/reposts')
								= post.repostsCount != 0 ? post.repostsCount : ''
						li.like
							button.like-button(title= post.isLiked ? 'Unlike' : 'Like')
								i.fa.fa-star
							a.count(href=config.url + '/' + post.user.screenName + '/' + post.id + '/likes')
								= post.likesCount != 0 ? post.likesCount : ''
			form.reply-form
				if login
					img.me-avatar(src=me.avatarUrl, alt='avatar')
					div.form
						textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + post.user.screenName + ' '
						div.design-allow(role='presentation')
						ol.photos
						ol.uploads
						button.attach-from-local(type='button', role='button', title='PCから画像を添付する')
							i.fa.fa-upload
						button.attach-from-album(type='button', role='button', title='アルバムから画像を添付する')
							i.fa.fa-folder-open
						button.submit-button.ui-button(type='submit', role='button')
							| Reply
							i.fa.fa-reply
						input(name='file', type='file', accept='image/*', multiple)
				else
					p plz login
			div.replies(itemprop='comment')
				if replies != null && replies.length > 0
					each reply in replies
						+subPost(reply)
