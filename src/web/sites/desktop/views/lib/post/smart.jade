mixin content(post)
	case post.type
		when 'status'
			div.text!= post.text
			
mixin common(post)
	footer.footer
		ul.actions
			li.reply
				button.reply-button(title='返信', role='button')
					i.fa.fa-reply
				a(href=config.url + '/' + post.user.screenName + '/status/' + post.id).count= post.repliesCount != 0 ? post.repliesCount : ''
			li.repost
				button.repost-button(title= post.isReposted ? 'シェアを取り消し' : 'シェア', role='button')
					i.fa.fa-retweet
				a(href=config.url + '/' + post.user.screenName + '/status/' + post.id + '/reposts').count= post.repostsCount != 0 ? post.repostsCount : ''
			li.favorite
				button.favorite-button(title= post.isFavorited ? 'お気に入り解除' : 'お気に入り', role='button')
					i.fa.fa-star
				a(href=config.url + '/' + post.user.screenName + '/status/' + post.id + '/favorites').count= post.favoritesCount != 0 ? post.favoritesCount : ''
		if post.stargazers != null
			ol.stargazers
				each stargazer in post.stargazers
					li.stargazer
						a.icon-anchor(href='/' + stargazer.screenName, title= '@' + stargazer.screenName)
							img.icon(src=stargazer.iconUrl, alt='icon')
	if post.replies.length > 0
		i.fa.fa-ellipsis-v.reply-info
	aside.form-and-replies
		form.reply-form(role='form')
			img.me-icon(src=me.iconUrl, alt='icon')
			div.form
				textarea(name='text', placeholder='この投稿に返信...', role='textbox', aria-multiline)= '@' + post.user.screenName + ' '
				div.design-allow(role='presentation')
				input(name='in-reply-to-post-id', type='hidden', value=post.id)
				button.submit-button.ui-button(type='submit', role='button')
					| Reply
					i.fa.fa-reply
		aside.replies(itemprop='comment')
			ol.statuses
				if post.replies.length > 0
					each reply in post.replies
						li.status(title!= '#{reply.createdAt}&#x0A;'
								data-id= reply.id
								data-user-id= reply.user.id)
							+subPost(reply)

mixin status(status)
	if status.inReplyToPost !== null
		div.reply-source(title!= '#{status.inReplyToPost.createdAt}&#x0A;'
				data-id= status.inReplyToPost.id
				data-user-id= status.inReplyToPost.user.id)
			+subPost(status.inReplyToPost)
	div.main
		div.icon-area
			a.icon-anchor(href=config.url + '/' + status.user.screenName, title= status.user.comment != null ? status.user.comment : '@' + status.user.screenName, rel='icon')
				img.icon(src=status.user.iconUrl, alt='icon')
		header.header
			div.author(itemprop='author')
				h2
					a.user-name(href=config.url + '/' + status.user.screenName, target='_blank', rel='author')= status.user.name
				if status.user.isVerified
					img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
				span.screen-name= status.user.screenName
			div.right
				if status.app != null
					a.via-anchor
						p.via
							span.caption via
							b.app-name= status.app.name
				a.time-anchor(href=config.url + '/' + status.user.screenName + '/status/' + status.id, itemprop='url')
					time(datetime=status.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= status.createdAt
		div.content(itemprop='articleBody')
			+content(status)
	+common(status)

mixin repost(repost)
	div.repost-information
		p.info
			a.icon-anchor(href=config.url + '/' + repost.user.screenName, title= repost.user.comment != null ? repost.user.comment : '@' + repost.user.screenName)
				img.icon(src=repost.user.iconUrl, alt='icon')
			span.text
				i.fa.fa-retweet
				| Reposted by 
				a.name(href=config.url + '/' + repost.user.screenName, target='_blank')= repost.user.name
	+extract(repost.post)

mixin extract(post)
	case post.type
		when 'status'
			+status(post)
		when 'repost'
			+repost(post)

mixin post(post)
	- var login = (me != null);
	li.post(
			class                   = post.type
			lang                    = post.user.lang
			title                   = post.createdAt
			itemscope
			itemtype                = 'http://schema.org/BlogPosting'
			data-id                 = post.id
			data-cursor             = post.cursor
			data-user-id            = post.user.id
			data-user-screen-name   = post.user.screenName
			data-user-name          = post.user.name
			data-is-favorited      != login ? post.type == 'repost' ? post.post.isFavorited.toString() : post.isFavorited.toString() : null
			data-is-reposted       != login ? post.type == 'repost' ? post.post.isReposted.toString() : post.isReposted.toString() : null
			data-display-html-is-active='false')
		if login
			div.repost-form
				div.background
				form.form
					h2
						i.fa.fa-retweet
						| この投稿をRepostしますか？
					article(role='article')
						a.icon-anchor(href=config.url + '/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName, rel='icon')
							img.icon(src=post.user.iconUrl, alt='icon')
						header.header
							h3
								a.user-name(href=config.url + '/' + post.user.screenName, target='_blank', rel='author')= post.user.name
							if post.user.isVerified
								img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
							span.screen-name= '@' + post.user.screenName
							a(href=config.url + '/' + post.user.screenName + '/status/' + post.id, itemprop='url'): time(datetime=post.createdAt, itemprop='dateCreated', pubdate, data-display-type='relative')= post.createdAt
						div.main(itemprop='articleBody')
							+content(post)
					div.actions
						button.accept(type='submit')
							i.fa.fa-check
							p Repost
						button.cancel(type='button')
							i.fa.fa-ban
							p キャンセル
		article(role='article')
			+extract(post)

mixin subPost(post)
	article
		a.icon-anchor(href=config.url + '/widget/talk/' + post.user.screenName, title= post.user.comment != null ? post.user.comment : '@' + post.user.screenName)
			img.icon(src=post.user.iconUrl, alt='icon')
		header
			if post.user.isVerified
				img.verified-icon(src='/resources/common/images/verified.png', alt='verified', title='認証済み')
			h2
				a(href=config.url + '/' + post.user.screenName, target='_blank')= post.user.name
			span.screen-name= post.user.screenName
			a(href=config.url + '/' + post.user.screenName + '/status/' + post.id): time(datetime=post.createdAt, pubdate, data-display-type='relative')= post.createdAt
		div.main
			+content(post)
